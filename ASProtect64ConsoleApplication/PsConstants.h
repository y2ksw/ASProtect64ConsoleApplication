//
//	PsConstants.h
//
//	Description:
//		Constants for SDK (status codes, process exit codes, initialization types).
//

//
//	I. Status codes
//

//
//	Types of status:
//		Fatal error with user message:		0xE100XXXX (PSC_FATAL_XXX)
//		Error with user message:	        0xA100XXXX (PSC_ERROR_XXX)
//		(Fatal) error without user message	0xE200XXXX (PSC_STATUS_XXX)
//		Error (NTSTATUS)					0xCXXXXXXX (PSC_STATUS_XXX)
//		Warning (NTSTATUS)					0x8XXXXXXX (PSC_STATUS_XXX)
//		Information (NTSTATUS)				0x4XXXXXXX (PSC_STATUS_XXX)
//		Success (NTSTATUS)					0x0XXXXXXX (PSC_STATUS_XXX)
//

// Common status codes common with NTSTATUS (without messages)
#define PSC_STATUS_SUCCESS												0x00000000
#define PSC_STATUS_UNSUCCESSFUL											0xC0000001
#define PSC_STATUS_INVALID_HANDLE										0xC0000008
#define	PSC_STATUS_INVALID_PARAMETER									0xC000000D
#define PSC_STATUS_ACCESS_DENIED										0xC0000022
#define PSC_STATUS_BUFFER_TOO_SMALL										0xC0000023
#define PSC_STATUS_INSUFFICIENT_RESOURCES								0xC000009A

// Common error codes (with messages)
#ifdef PS_USE_LOCAL_MACHINE_STORAGE
#define	PSC_FATAL_REGISTRY_ACCESS_ERROR									0xE1003018
#else
#define	PSC_FATAL_REGISTRY_ACCESS_ERROR									0xE1003003
#endif
#define	PSC_FATAL_HARDWARE_ACCESS_ERROR									0xE1003024

// License control status codes (without messages)
#define PSC_STATUS_LICENSE_NOT_FOUND									0xE2000001
#define PSC_STATUS_INVALID_ACTIVATION_KEY								0xE2000004
#define PSC_STATUS_KEY_IS_INVALID										0xE2000005
#define PSC_STATUS_VALID_HARDWARE_KEY									0xE2000007
#define PSC_STATUS_NEW_TRIAL_LICENSE_CREATED							0xE2000008
#define PSC_STATUS_LICENSE_ALREADY_DEACTIVATED							0xE2000009
#define PSC_STATUS_START_IN_TRIAL_MODE_IS_NOT_ALLOWED					0xE200000D
#define PSC_STATUS_UNABLE_TO_REGISTER_MESSAGE_DLL						0xE2000013
#define PSC_STATUS_LICENSE_MERGE_FAILED									0xE2000031
#define PSC_STATUS_FILE_IO_FAILED										0xE2000032

// Driver errors (with messages)
#define	PSC_FATAL_DRIVER_USAGE_CONFLICT									0xE100300F
#define PSC_FATAL_DRIVER_DEBUGGER_DETECTED								0xE1003007
#define PSC_FATAL_DRIVER_SAFE_MODE_DETECTED								0xE1003019
#define PSC_FATAL_DRIVER_ERROR											0xE1003020

// Internal status codes. File system related. Without messages.
#define PSC_STATUS_FS_CONTAINER_FORMAT_NOT_SUPPORTED					0xE0080001
#define PSC_STATUS_FS_CONTAINER_FORMAT_INVALID							0xE0080002
#define PSC_STATUS_FS_FILE_SIGNATURE_NOT_FOUND							0xE0080003
#define PSC_STATUS_FS_FILE_NOT_A_SIGNATURE								0xE0080004

// Internal status codes (without messages)
#define PSC_STATUS_DRIVERS_INSTALLATION_CANCELLED						0x21000004
#define PSC_STATUS_SUCCESS_NON_COMMERCIAL_KEY							0x21000002
#define PSC_STATUS_SET_INITIALIZATION_TYPE_DISC_WITH_BACKUP_DISC_MODE	0x21000003
#define PSC_STATUS_CALL_ACTIVATOR										0x21000005
#define PSC_STATUS_SET_INITIALIZATION_TYPE_DISC_WITH_BACKUP_BACKUP_MODE	0x21000006
#define PSC_STATUS_RETURN_BACK_FROM_DISC_INITIALIZATION					0x21000007
#define PSC_STATUS_SELECT_INITIALIZATION_TYPE							0x21000008

// Internal error codes (without messages)
#define PSC_STATUS_ABORTED_BY_USER										0xE2000014
#define PSC_STATUS_EXIT_REQUIRED_BY_USER								0xE2000022
#define PSC_STATUS_RETRY_REQUIRED_BY_USER								0xE2000015
#define PSC_STATUS_BAD_FORMAT											0xE200000E
#define PSC_STATUS_ERROR_IN_WINAPI										0xE200000F
#define	PSC_STATUS_ALREADY_OPENED										0xE2000010
#define PSC_STATUS_UNABLE_TO_GET_TIME									0xE2000016
#define	PSC_STATUS_MEMORY_LOCKING_FAILED								0xE2003052
#define	PSC_STATUS_INITIALIZATION_FAILED	          					0xE2003053
#define	PSC_STATUS_DISC_SYNC_LOCK_FAILED								0xE2003054
#define PSC_STATUS_INTERNAL_ERROR_SYNCRONIZATION						0xE2003056 
#define PSC_STATUS_INTERNAL_ERROR_ACTIVATION							0xE2003057
#define PSC_STATUS_DISC_UNABLE_TO_COPY_LABEL							0xE2003058
#define	PSC_STATUS_UNABLE_TO_COPY_INFO_BUFFER							0xE200F001
#define PSC_STATUS_UNABLE_TO_GET_ERROR_BUFFER							0xE200000A
#define PSC_STATUS_INVALID_OPERATION									0xE200000B
#define PSC_STATUS_ERROR_IN_PSAPI										0xE200000C
#define PSC_STATUS_DRIVER_INCOMPATIBLE_OS								0xE2003002
#define	PSC_STATUS_IAT_CHECK_FAILED_FOR_PROTECTED_MODULE				0xE2003059

// Intialization fatal codes (with messages)
#define PSC_FATAL_UNSUPPORTED_PROCESSOR									0xE1003001
#define PSC_FATAL_UNSUPPORTED_OPERATING_SYSTEM							0xE1003002
#define PSC_FATAL_MULTIPLE_INSTANCES_CONFLICT							0xE1003004
#define PSC_FATAL_INVALID_TIME_SETTINGS									0xE1003055
#define PSC_FATAL_TIME_EXPIRED_WITH_NO_BINDING							0xE1003077
#define PSC_FATAL_APPLICATIONS_RUNNING									0xE100309A
#define PSC_FATAL_ACTIVATOR_RUNNING										0xE100309B
#define	PSC_FATAL_FILE_SYSTEM_INITIALIZATION_FAILED						0xE1003022
#define PSC_FATAL_PC_EMULATOR_DETECTED									0xE1003025
#define	PSC_FATAL_REMOTE_SESSION_DETECTED								0xE1003030
#define PSC_FATAL_MODULE_INFECTED										0xE1003014
#define PSC_FATAL_DEBUGGER_DETECTED										0xE1003007
#define PSC_FATAL_BAD_PROCESS_OWNER										0xE1003010

// Miscellaneous error codes (with messages)
#define	PSC_ERROR_KEY_MISTYPED											0xA1003037

// Communication error codes (with messages)
#define PSC_ERROR_SOCKET_IO_FAILED										0xA1003287
#define PSC_ERROR_SOCKET_ERROR											0xA1003281
#define PSC_ERROR_UNABLE_TO_CONNECT										0xA1003286
#define PSC_ERROR_INVALID_RESPONSE										0xA100328E
#define PSC_ERROR_PROXY_AUTHENTICATION_FAILED							0xA1003292

// Communication error codes (with messages)
#define PSC_STATUS_COMMUNICATOR_SOCKET_IO_FAILED						0xE2003287
#define PSC_STATUS_COMMUNICATOR_SOCKET_ERROR							0xE2003281
#define PSC_STATUS_COMMUNICATOR_UNABLE_TO_CONNECT						0xE2003286
#define PSC_STATUS_COMMUNICATOR_INVALID_RESPONSE						0xE200328E

// Disc error codes (common)
#define	PSC_ERROR_DISC_UNABLE_TO_READ_VALID_KEY_FROM_DISC				0xA100313D
#define	PSC_ERROR_DISC_NOT_FOUND										0xA1003102
#define	PSC_ERROR_DISC_MORE_THEN_ONE_PRODUCT_DISC						0xA100313A
#define	PSC_ERROR_DISC_IO_ERROR											0xA1003121
#define	PSC_STATUS_DISC_INSERT_DISC_INTO_ANOTHER_DRIVE					0xE2003120	// Not used (obsolete)
#define PSC_ERROR_DISC_KEY_NOT_FOR_THIS_DOCUMENT						0xA1003122

// Disc error codes (check failed)
#define	PSC_ERROR_DISC_CHECK_CANCELLED									0xA1003125
#define	PSC_ERROR_DISC_CHECK_FAILED										0xA1003126
#define	PSC_ERROR_DISC_CHECK_FAILED_FOR_INTERNAL_KEY 					0xA1003130
#define PSC_ERROR_DISC_COPY_DETECTED									0xA1003142
#define PSC_ERROR_DISC_EMULATOR_DETECTED								0xA1003141
#define PSC_ERROR_DISC_FILTER_DETECTED									PSC_ERROR_DISC_EMULATOR_DETECTED
#define PSC_ERROR_DISC_SYNC_DRIVER_PATCHED								PSC_ERROR_DISC_EMULATOR_DETECTED
#define PSC_ERROR_DISC_SYNC_DRIVER_CALLBACKS_DEAD						PSC_ERROR_DISC_EMULATOR_DETECTED
#define PSC_ERROR_DISC_SYNC_DRIVER_MODULES_INFO_INCONSISTENT			PSC_ERROR_DISC_EMULATOR_DETECTED
#ifdef PS_READ_KEY_FROM_DISC
#define PSC_ERROR_DISC_DVD_WRITABLE_MEDIA								PSC_ERROR_DISC_COPY_DETECTED
#define PSC_ERROR_DISC_CD_WRITABLE_MEDIA_OR_INVALID_ATIP				PSC_ERROR_DISC_COPY_DETECTED
#define PSC_ERROR_DISC_DATA_CHECK_FAILED								PSC_ERROR_DISC_CHECK_FAILED_FOR_INTERNAL_KEY
#else
#ifdef PS_DISC_CHECK_WRITABLE_MEDIA_ONLY
#define PSC_ERROR_DISC_DVD_WRITABLE_MEDIA								PSC_ERROR_DISC_COPY_DETECTED
#define PSC_ERROR_DISC_CD_WRITABLE_MEDIA_OR_INVALID_ATIP				PSC_ERROR_DISC_COPY_DETECTED
#else
#define PSC_ERROR_DISC_DVD_WRITABLE_MEDIA								PSC_ERROR_DISC_COPY_DETECTED
#define PSC_ERROR_DISC_CD_WRITABLE_MEDIA_OR_INVALID_ATIP				PSC_ERROR_DISC_COPY_DETECTED
#endif
#define PSC_ERROR_DISC_DATA_CHECK_FAILED								PSC_ERROR_DISC_CHECK_FAILED
#endif

// Disc error codes (license expiration and deactivation)
#define	PSC_ERROR_LICENSE_DEACTIVATED_FOR_DISC_KEY						0xE200322C
#define	PSC_FATAL_TIME_CHECK_FAILED_FOR_DISC_KEY						0xE100312A
#define	PSC_ERROR_CLOCK_SET_BACKWARD_FOR_DISC_KEY						0xA100312C
#define PSC_ERROR_LIFE_TIME_CHECK_FAILED_FOR_DISC_KEY					0xA1003145
#define PSC_ERROR_START_TIME_NOT_REACHED_FOR_DISC_KEY					0xA1003148
#define	PSC_ERROR_NUMBER_OR_RUNS_CHECK_FAILED_FOR_DISC_KEY				0xA1003128
#define PSC_ERROR_EXECUTION_TIME_CHECK_FAILED_FOR_DISC_KEY				0xA1003146

// Activation error codes (common)
#define	PSC_ERROR_KEY_INTEGRITY_CHECK_FAILED_FOR_ACTIVATION_KEY			0xA1003206
#define	PSC_ERROR_HARDWARE_CHECK_FAILED_FOR_ACTIVATION_KEY				0xA1003204
#define	PSC_ERROR_REGISTERED_PROFILE_NOT_FOUND_FOR_ACTIVATION_KEY		0xA1003207
#define	PSC_FATAL_INVALID_RECEIVED_KEY									0xE1003290

// Activation error codes 
#define	PSC_ERROR_LICENSE_DEACTIVATED_FOR_ACTIVATION_KEY				0xA1003228
#define	PSC_ERROR_CLOCK_SET_BACKWARD_FOR_ACTIVATION_KEY					0xA100320B
#define	PSC_ERROR_LIFE_TIME_CHECK_FAILED_FOR_ACTIVATION_KEY				0xA1003223
#define	PSC_ERROR_START_TIME_NOT_REACHED_FOR_ACTIVATION_KEY				0xA1003149
#define	PSC_ERROR_NUMBER_OR_RUNS_CHECK_FAILED_FOR_ACTIVATION_KEY		0xA100320F
#define	PSC_ERROR_EXECUTION_TIME_CHECK_FAILED_FOR_ACTIVATION_KEY		0xA1003219
#define	PSC_FATAL_TIME_CHECK_FAILED_FOR_ACTIVATION_KEY					0xE1003205

// Deactivation error codes
#define PSC_ERROR_LICENSE_NOT_FOUND_FOR_DEACTIVATION					0xA100322D
#define PSC_ERROR_HARDWARE_CHECK_FAILED_WHILE_DEACTIVATION				0xA1003231
#define PSC_ERROR_KEY_INTEGRITY_CHECK_FAILED_WHILE_DEACTIVATION         0xA1003232
#define PSC_ERROR_LICENSE_EXPIRED_WHILE_DEACTIVATION                    0xA1003233
#define PSC_ERROR_START_TIME_NOT_REACHED_WHILE_DEACTIVATION				0xA1003237
#define PSC_FATAL_TIME_CHECK_FAILED_WHILE_DEACTIVATION                  0xA1003234
#define PSC_ERROR_CLOCK_SET_BACKWARD_WHILE_DEACTIVATION                 0xA1003235
#define PSC_ERROR_LICENSE_DEACTIVATED_WHILE_DEACTIVATION                0xE2003236
#define PSC_ERROR_DEACTIVATIONS_EXHAUSTED								0xA100305C
#define PSC_ERROR_DEACTIVATION_INVALID_FOR_TRIAL						0xA100305D

// Trial error codes
#define PSC_ERROR_INTEGRITY_CHECK_FAILED_FOR_TRIAL_INFO					0xA1003213
#define	PSC_ERROR_KEY_INTEGRITY_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY	0xA1003212
#define	PSC_ERROR_HARDWARE_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY		0xA1003210
#define	PSC_FATAL_UNABLE_TO_REMOVE_TRIAL_INFO							0xE1003217

// Trial error codes (license expiration and deactivation)
#define	PSC_STATUS_LICENSE_DEACTIVATED_FOR_TRIAL_ACTIVATION_KEY			0xE2003229
#define	PSC_ERROR_CLOCK_SET_BACKWARD_FOR_TRIAL_ACTIVATION_KEY			0xA1003214
#define PSC_ERROR_LIFE_TIME_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY		0xA1003224
#define PSC_ERROR_START_TIME_NOT_REACHED_FOR_TRIAL_ACTIVATION_KEY		0xE200314A
#define	PSC_ERROR_NUMBER_OR_RUNS_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY	0xA1003215
#define PSC_ERROR_EXECUTION_TIME_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY	0xA1003220
#define	PSC_FATAL_TIME_CHECK_FAILED_FOR_TRIAL_ACTIVATION_KEY			0xE1003211

// Rescue error codes
#define	PSC_ERROR_KEY_INTEGRITY_CHECK_FAILED_FOR_RESCUE_KEY				0xA100312E
#define	PSC_ERROR_HARDWARE_CHECK_FAILED_FOR_RESCUE_KEY					0xA1003127
#define	PSC_ERROR_LICENSE_OR_REGISTERED_PROFILE_NOT_FOUND_FOR_RESCUE_KEY 0xA1003123

// Rescue error codes (license expiration and deactivation)
#define	PSC_STATUS_LICENSE_DEACTIVATED_FOR_RESCUE_KEY					0xE200322A
#define	PSC_ERROR_CLOCK_SET_BACKWARD_FOR_RESCUE_KEY						0xA100312D
#define PSC_ERROR_LIFE_TIME_CHECK_FAILED_FOR_RESCUE_KEY					0xA1003225
#define PSC_ERROR_START_TIME_NOT_REACHED_FOR_RESCUE_KEY					0xE200314B
#define	PSC_ERROR_NUMBER_OR_RUNS_CHECK_FAILED_FOR_RESCUE_KEY			0xA1003129
#define PSC_ERROR_EXECUTION_TIME_CHECK_FAILED_FOR_RESCUE_KEY			0xA1003221
#define	PSC_FATAL_TIME_CHECK_FAILED_FOR_RESCUE_KEY						0xE100312B

// Auto activation error codes (without messages)
#define	PSC_STATUS_AUTO_ACTIVATION_CANCELLED							0xE200001F
#define	PSC_STATUS_AUTO_ACTIVATION_DENIED								0xE2000020
#define	PSC_STATUS_AUTO_ACTIVATION_FAILED								0xE2000021

// Auto activation error codes
#define	PSC_ERROR_KEY_INTEGRITY_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY	0xA1003136
#define	PSC_ERROR_HARDWARE_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY			0xA1003133
#define	PSC_ERROR_REGISTERED_PROFILE_NOT_FOUND_FOR_AUTO_ACTIVATION_KEY	0xA1003137

// Auto activation error codes (license expiration and deactivation)
#define	PSC_STATUS_LICENSE_DEACTIVATED_FOR_AUTO_ACTIVATION_KEY			0xE200322B
#define	PSC_ERROR_CLOCK_SET_BACKWARD_FOR_AUTO_ACTIVATION_KEY			0xA1003138
#define PSC_ERROR_LIFE_TIME_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY		0xA1003226
#define PSC_ERROR_START_TIME_NOT_REACHED_FOR_AUTO_ACTIVATION_KEY		0xE200314C
#define	PSC_ERROR_NUMBER_OR_RUNS_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY	0xA1003134
#define PSC_ERROR_EXECUTION_TIME_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY	0xA1003222
#define	PSC_FATAL_TIME_CHECK_FAILED_FOR_AUTO_ACTIVATION_KEY				0xE1003135

// Server binding status codes (without messages)
#define PSC_STATUS_SRVBND_SERVER_SESSION_LOCKED							0xE2000017
#define PSC_STATUS_SRVBND_SERVER_INVALID_SESSION_INTEGRITY				0xE2000018
#define	PSC_STATUS_SRVBND_INVALID_REQUEST								0xE2000019
#define	PSC_STATUS_SRVBND_INVALID_REQUEST_NUMBER						0xE200001A
#define PSC_STATUS_SRVBND_ERROR_WITH_MESSAGE_RETRY_IS_POSSIBLE			0xE200001B
#define PSC_STATUS_SRVBND_ERROR_WITH_MESSAGE_RETRY_IS_NOT_POSSIBLE		0xE200001C
#define	PSC_STATUS_SRVBND_SERVER_SESSION_NOT_FOUND						0xE200001E

// Server binding error codes (with messages)
#define	PSC_ERROR_SRVBND_TOO_MANY_CONNECTIONS							0xA1003300
#define	PSC_ERROR_SRVBND_UNABLE_TO_LOAD_PROTECTION_LIBRARY_ON_SERVER	0xA1003301
#define PSC_ERROR_SRVBND_UNABLE_TO_CONNECT								0xA1003302	// Not used (preserved for future use)
#define PSC_ERROR_SRVBND_IO_ERROR										0xA1003303	// Not used (preserved for future use)
#define PSC_ERROR_SRVBND_SESSION_NOT_APPROVED							0xA1003304
#define	PSC_ERROR_SRVBND_INVALID_RESPONSE								0xA100330A
#define	PSC_ERROR_SRVBND_LIFE_TIME_CHECK_FAILED							0xA100305A
#define	PSC_FATAL_SRVBND_TIME_CHECK_FAILED								0xE100305B

// Certificate chec error codes
#define PSC_STATUS_CERTIFICATE_INVALID_FORMAT							0xE2000023
#define PSC_STATUS_CERTIFICATE_NOT_VALID_YET							0xE2000024
#define PSC_STATUS_CERTIFICATE_NOT_VALID_ALREADY						0xE2000025

//
//	II. Process exit codes
//

//
//	Exit codes of protected application
//

// License has expired (this code is returned if the option for termination
// of application after expiration of the license is enabled)
#define PSC_EXIT_CODE_LICENSE_EXPIRED						0xC0000071	// NTSTATUS: STATUS_PASSWORD_EXPIRED

// Connection to binding server has been lost
#define PSC_EXIT_CODE_SRVBND_SESSION_LOST					0xC000020C	// NTSTATUS: STATUS_CONNECTION_DISCONNECTED

// Unknown error in protection module
#define PSC_EXIT_CODE_UNKNOWN_ERROR							0xC0000001	// NTSTATUS: STATUS_UNSUCCESSFUL

// Process has been terminated by protect.exe (for rebooting during
// installation of drivers)
#define PSC_EXIT_CODE_EXTERNAL_TERMINATION					0xC000020C	// NTSTATUS: STATUS_CONNECTION_DISCONNECTED

#define	PSC_EXIT_CODE_PERIODICAL_IAT_CHECK_FAILED			0xC000003F // NTSTATUS: STATUS_CRC_ERROR

//
//	Exit codes of protect.exe
//		The module protect.exe returns the value of PSC_STATUS_XXX that
//		corresponds to the error (PSC_STATUS_SUCCESS = 0 on success) or
//		PSC_EXIT_CODE_UNKNOWN_ERROR on unknown error. In special cases (see
//		below), protect.exe returns other exit codes.
//

//
//	Exit codes of protect.exe (in driver installer mode) for following commands:
//		protect.exe /drv:install /nogui [/forcereboot]
//		protect.exe /drv:uninstall /nogui [/forcereboot]
//		protect.exe /drv:remove /nogui [/forcereboot]
//

// Operation successfully completed
#define PSC_EXIT_CODE_DRIVER_SUCCESS						0

// Operation failed: unknown error occured
#define PSC_EXIT_CODE_DRIVER_ERROR							1

// Reboot required for completing of operation
#define PSC_EXIT_CODE_DRIVER_NEED_REBOOT					2

// Operation failed: administrator privilegies required
#define PSC_EXIT_CODE_DRIVER_NEED_ADMINISTRATOR				3

// Operation failed: Conflict with another application (close all applications)
#define PSC_EXIT_CODE_USAGE_CONFLICT						4

// Operation failed: debugger detected
#define PSC_EXIT_CODE_DRIVER_DEBUGGER_DETECTED				5

// Operation failed: incompatible OS detected
#define PSC_EXIT_CODE_DRIVER_INCOMPATIBLE_OS				6

// Operation failed: OS is running in safe mode
#define PSC_EXIT_CODE_DRIVER_SAFE_MODE						7

// Operation failed: cancelled by user
#define PSC_EXIT_CODE_DRIVER_CANCELLED						9

//
//	Exit codes of protect.exe (in driver installer mode) for following command:
//		protect.exe /drv:check /nogui
//

// Drivers are not installed
#define PSC_EXIT_CODE_DRIVERS_NOT_INSTALLED					0

// Drivers are installed
#define PSC_EXIT_CODE_DRIVER_INSTALLED						1

//
//	III. Miscellaneous constants
//

// Maximum key length
#define KEY_MAX_SYMBOLIC_LENGTH								320

// Maximum number of information codes returned by PSC_GetErrorInformation
#define ERR_MAXIMUM_NUMBER_OF_INFORMATION_CODES				64

// Size of document guid hash returned by PSC_GetDocumentGuidHash
#define ERR_DOCUMENT_GUID_HASH_BUFFER_SIZE					16

// Initialization types (argument of PSC_StartInitialization)
#define PS_INITIALIZATION_TYPE_SIMPLE						0
#define PS_INITIALIZATION_TYPE_DISC							1
#define PS_INITIALIZATION_TYPE_HARDWARE						2
#define PS_INITIALIZATION_TYPE_EXTERNAL						4
#define PS_INITIALIZATION_TYPE_SERVER						8
#define PS_INITIALIZATION_TYPE_DISC_WITH_BACKUP				32
#define PS_INITIALIZATION_TYPE_DISC_WITH_BACKUP_DISC_MODE	0x10000000
#define PS_INITIALIZATION_TYPE_DISC_WITH_BACKUP_BACKUP_MODE	0x20000000
#define PS_INITIALIZATION_TYPE_UNDEFINED					0xFFFFFFFF

// ELM modes
#define PS_ELM_MODE_DISABLED								0
#define PS_ELM_MODE_LOADER									1
#define PS_ELM_MODE_APPLICATION								2

// ELM communications
#define PS_ELM_MODE_COMMUNICATION_ESTABLISHING_TIMEOUT_MS	30000

// Period for periodical license check
#define PS_PERIODICAL_LICENSE_CHECK_INTERVAL_MS				30000

// Client validation buffer size
#define PSA_VALIDATE_CLIENT_BUFFER_SIZE 					16

// Sublanguage for log messages
#define SUBLANG_ENGLISH_LOG									0x3F

// Size of project GUID hash
#define PS_PROJECT_GUID_HASH_SIZE							16

//
//	IV. Names of global objects
//

//
//	Global events are used to indicate the starting mode of application. Event names
//	are constructed using prefix and hash of project GUID:
//
//		name = PS_EVENT_NAME_PREFIX_XXX + PS_PROJECT_GUID_HASH_OF_STRING_W
//		name = L"Global\\" + GPS_EVENT_NAME_PREFIX_XXX + PS_PROJECT_GUID_HASH_OF_STRING_W
//

// If this event is created before starting of rotected application, the
// application will start in "No GUI Mode" i.e. no GUI window will be
// displayed. If the license is valid, the application will launch, else
// the error message will be written into event log (see also description
// of /eventlog:register). This event can be either global or local.
#define PS_EVENT_NAME_PREFIX_GUI_NOT_AVAILABLE_MODE					L"{89E323B4-B99D-4D0A-8980-887714794544} - "

// Local event to mark deactivation mode of activator
#define PS_EVENT_NAME_PREFIX_DEACTIVATION							L"{E895772A-B8CB-4ebf-9B89-EA4C6F8064BB} - "

// Prefix for name of pipe used for communiction between application and
// manager of loaded application
#define PS_PIPE_NAME_PREFIX_ELM										L"{0CE99E02-D8C5-4b53-86B9-3AE1E01A6D06} - "
